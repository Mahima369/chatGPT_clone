@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

/* :root can be useful for declaring global CSS variables: */
:root {
    --text-color: #FFFFFF;
    --icon-color: #ACACBE;
    --icon-hover-bg: #5b5e71;
    --placeholder-color: #dcdcdc;
    --outgoing-chat-bg: #343541;
    --incoming-chat-bg: #444654;
    --outgoing-chat-border: #343541;
    --incoming-chat-border: #444654;
}



body {
    background: var(--outgoing-chat-bg);


}

.chat-container {
    
    max-height: 100vh;
    /*    height: 100vh = 100% of the viewport height. */
    padding-bottom: 150px;
    overflow-y: auto;
    /* The overflow-y property specifies whether to clip the content, add a scroll bar, or display overflow content of a block-level element, when it overflows at the top and bottom edges. */
}

.chat.outgoing {
    background: var(--outgoing-chat-bg);
    border: 1px solid var(--outgoing-chat-border);
    overflow-y: auto;

}

.chat.incoming {

    background: var(--incoming-chat-bg);
    border: 1px solid var(--incoming-chat-border);
    overflow-y: auto;
   


}







.chat .chat-content {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    max-width: 1200px;
    width: 100%;
    color: #FFFFFF;
}

.chat .chat-content span {
    cursor: pointer;
    font-size: 150%;
    visibility: hidden;
    color: var(--icon-color);
    margin-top: 20px;

}

.incoming:hover .chat-content span {

    visibility: visible;
}


.chat .chat-details {
    display: flex;
    align-items: center;
}

.chat-container .chat {
    color: var(--text-color);
    padding: 20px 10px;
    /* top and bottom , left and right*/
    display: flex;
    justify-content: center;
    /*horizontally center */


}

.chat .chat-details img {
    margin-left: 100px;
    height: 35px;
    width: 35px;
    border-radius: 5px;
    object-fit: cover;
    /* If we use object-fit: none; the image is not resized:*/
    align-self: flex-start;
    margin: 15px 2px 15px 150px;


}


.chat .chat-details p {
    font-size: 1.05rem;
    white-space: pre-wrap;  
    /*  The white-space property specifies how white-space inside an element is handled. */
    padding: 0 50px 0 25px;
 
    color: var(--text-color);
    word-break: break-word;  /*the word-break property specifies how words should break when reaching the end of a line.*/


}
.chat .chat-details p.error{
    color:#e55865;
}

span.material-symbols-outlined {
    user-select: none;
    cursor: pointer;

}


.chat .typing-animation {
    display: inline-flex;
    /* The display: inline-flex property will make the element a flexbox container and the container will be inline. They can adjust their size. The items inside the container are also inline. The display: flex property will make the items of the container inline but the container will block the whole row */

    padding-left: 25px;
}




.typing-animation .typing-dot {
    width: 7px;
    height: 7px;
    /* color:var(--text-color); */
    opacity: 0.7;
    margin: 0px 3px;
    border-radius: 50%;
    background: var(--text-color);
    animation: animateDots 1.5s ease-in-out infinite;


}


@keyframes animateDots {

    0%,
    44% {
        transform: translateY(0px);
    }

    22% {
        opacity: 0.4px;
        transform: translateY(-6px);
    }

    44% {
        opacity: 0.2px;
    }


}


.typing-container {
    position: fixed;
    bottom: 0px;
    width: 100%;
    display: flex;
    padding: 20px 10px;
    justify-content: center;
    background: var(--outgoing-chat-bg);
    border: 1px solid var(--incoming-chat-border);
    
}

.typing-container .typing-content {
    display: flex;
    max-width: 950px;
    width: 100%;
    align-items: flex-end;
}

.typing-content .typing-textarea {
    position: relative;
    width: 100%;
    display: flex;

}

.typing-textarea textarea{
    width: 100%;
    height: 55px;
    resize:none;
    background: var(--incoming-chat-bg);
    resize: none;
    color: var(--text-color);
    padding: 15px 45px 15px 20px;
    font-size: 1rem;
    border: none;
    outline: var(--incoming-chat-border);
    border-radius: 4px;
    overflow-y: auto;
    max-height: 250px;

   
}

textarea::-webkit-scrollbar{
    display: none;
height: 55px;
}
.typing-content span {
    height: 55px;
    width: 55px;
    display: flex;
    align-items: center;


    color: var(--icon-color);

}

.typing-controls {
    display: flex;
}

.typing-textarea span {
    position: absolute;
    
    /*  An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed). */
    bottom: 0;
    right: 0;
    font: 1.5rem;
}


.typing-controls span {
    background: var(--incoming-chat-bg);
    margin-left: 7px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;

}

@media(max-width:500px){

.chatcontainer{


    width: 500px;
}

.chat .chat-details img {
    margin-left: 10px;
   


}

} 